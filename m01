from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor
from sklearn.svm import SVR
from sklearn.neural_network import MLPRegressor
from sklearn.metrics import mean_squared_error

# Separate the data into features (X) and target (y)
X = df[df['date'].dt.year < 2022]['비난지수'].values.reshape(-1, 1)
y = df[df['date'].dt.year < 2022]['도발지수']

# Split the data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Define the models
models = {
    "Linear Regression": LinearRegression(),
    "Decision Tree": DecisionTreeRegressor(random_state=42),
    "Random Forest": RandomForestRegressor(random_state=42),
    "SVM": SVR(),
    "Neural Network": MLPRegressor(random_state=42, max_iter=2000)
}

# Train and evaluate each model
predictions = {}
for model_name, model in models.items():
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)
    rmse = mean_squared_error(y_test, y_pred, squared=False)
    print(f"{model_name} RMSE: {rmse}")
    predictions[model_name] = model.predict(df[df['date'].dt.year == 2022]['비난지수'].values.reshape(-1, 1))
