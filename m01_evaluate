# Import necessary libraries
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score
import numpy as np

# Prepare a DataFrame to store the results
evaluation_metrics = pd.DataFrame(index=['R^2', 'MAE', 'MSE', 'RMSE'])

# Calculate the evaluation metrics for each model in Sheet 2
for model_name in sheet_2_df.columns[:-1]:  # The last column is for actual values
    y_true = sheet_2_df['Actual']
    y_pred = sheet_2_df[model_name]
    evaluation_metrics.loc['R^2', model_name] = r2_score(y_true, y_pred)
    evaluation_metrics.loc['MAE', model_name] = mean_absolute_error(y_true, y_pred)
    evaluation_metrics.loc['MSE', model_name] = mean_squared_error(y_true, y_pred)
    evaluation_metrics.loc['RMSE', model_name] = np.sqrt(mean_squared_error(y_true, y_pred))

# Calculate the evaluation metrics for each model in Sheet 3
for model_name in sheet_3_df.columns[:-1]:  # The last column is for actual values
    y_true = sheet_3_df['Actual']
    y_pred = sheet_3_df[model_name]
    evaluation_metrics.loc['R^2', model_name] = r2_score(y_true, y_pred)
    evaluation_metrics.loc['MAE', model_name] = mean_absolute_error(y_true, y_pred)
    evaluation_metrics.loc['MSE', model_name] = mean_squared_error(y_true, y_pred)
    evaluation_metrics.loc['RMSE', model_name] = np.sqrt(mean_squared_error(y_true, y_pred))

# Save the DataFrame to an Excel file
evaluation_metrics.to_excel("/mnt/data/evaluation_metrics.xlsx")

evaluation_metrics
